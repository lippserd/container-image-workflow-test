name: Build and Publish Container Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types:
      - published

env:
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-publish-container-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      # Explicitly using the checkout action (instead of relying on docker/build-push-action to do it implicitly)
      # because we need to fetch all tags.
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Switch to fetch-tags: true once https://github.com/actions/checkout/issues/1467 is fixed.
          fetch-depth: 0

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ env.IMAGE_NAME }}
          tags: |
            type=edge
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            # Update the `latest` tag only on the default branch to ensure it represents the most current release when
            # releasing from multiple branches.
            type=raw,event=tag,value=latest,enable={{is_default_branch}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Container image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Containerfile
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}

          provenance: false
